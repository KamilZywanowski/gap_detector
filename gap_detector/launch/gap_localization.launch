<launch>
    <arg name="rosbag"            default="false"/>
    <param if="$(arg rosbag)" name="use_sim_time" value="true"/>

    <arg name="rviz" default="0"/>

    <group if="$(arg rosbag)">
        <node pkg="rosbag" type="play" name="player" output="screen" args="--clock -d 5 /root/epfl_ws/robot.bag"/>
    </group>

    <group unless="$(arg rosbag)">
        <include file="$(find realsense2_camera)/launch/rs_camera.launch">
            <arg name="align_depth" default="true"/>
        </include>
    </group>


    <!-- The static transformation between camera and robot in a format translation in X Y Z, rotation in X Y Z-->
	<node pkg="tf2_ros" type="static_transform_publisher" name="camera_link" args="0 0 0.4 0 0.55 0 base_link camera_link" />

    <!-- Mapping code -->
    <include file="$(find rtabmap_ros)/launch/rtabmap.launch">
        <arg name="rtabmap_args" default="--delete_db_on_start"/>
        <arg name="approx_sync" default="false"/>
        <arg name="frame_id" default="base_link"/>
        <arg name="depth_topic" default="/camera/aligned_depth_to_color/image_raw" />
        <arg name="rgb_topic" default="/camera/color/image_raw"/>
        <arg name="camera_info_topic" default="/camera/color/camera_info" />
    </include>

    <!-- Code to detect gaps -->
    <node name="gap_detector" pkg="gap_detector" type="gap_detector.py" />

    <!-- Code to build the 2D map out of pose and detected gaps -->
    <include file="$(find costmap_2d)/launch/example.launch" />

    <!-- rviz -->
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find gap_detector)/rviz/gap_detector.rviz" if="$(eval arg('rviz') != 0)" />

</launch>